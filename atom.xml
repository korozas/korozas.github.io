<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Korozas</title>
  
  
  <link href="http://korozas.top/atom.xml" rel="self"/>
  
  <link href="http://korozas.top/"/>
  <updated>2021-03-19T14:13:04.667Z</updated>
  <id>http://korozas.top/</id>
  
  <author>
    <name>korozas</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>XCU C语言课设代码</title>
    <link href="http://korozas.top/2021/03/19/papername/"/>
    <id>http://korozas.top/2021/03/19/papername/</id>
    <published>2021-03-19T14:08:24.000Z</published>
    <updated>2021-03-19T14:13:04.667Z</updated>
    
    <content type="html"><![CDATA[<p>#pragma once<br>#include &lt;stdio.h&gt;<br>#include “Book.c”<br>#include “PrintMainMenu.h”</p><p>//选择功能<br>void choose();</p><p>#pragma once<br>#include &lt;stdio.h&gt;<br>#include “Book.c”</p><p>//创建链表模块<br>Book *create(Book *);</p><p>#pragma once<br>#include &lt;stdio.h&gt;<br>#include “Book.c”</p><p>//删除节点模块<br>void del(Book*);</p><p>#pragma once<br>#include &lt;stdio.h&gt;<br>#include “Book.c”</p><p>//插入节点模块（可多个插入）<br>void insert(Book*);</p><p>#pragma once<br>#include &lt;stdio.h&gt;<br>#include “Book.c”</p><p>//修改节点模块<br>void mod(Book *);</p><p>#pragma once<br>#include &lt;stdio.h&gt;<br>#include “Book.c”</p><p>//输出链表函数<br>void printBook(Book *);</p><p>#pragma once<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;</p><p>//打印菜单<br>void printMainMenu();</p><p>#pragma once<br>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;</p><p>//打印菜单</p><p>#pragma once<br>#include &lt;stdio.h&gt;<br>#include “Book.c”</p><p>//根据作者查询<br>void searchByAuthor(Book*);</p><p>#pragma once<br>#include &lt;stdio.h&gt;<br>#include “Book.c”</p><p>//根据编号查找图书信息<br>void searchById(Book*);</p><p>#pragma once<br>#include &lt;stdio.h&gt;<br>#include “Book.c”</p><p>//根据书名查找图书信息<br>void searchByName(Book*);</p><p>#pragma once<br>#include &lt;stdio.h&gt;<br>#include “Book.c”</p><p>//链表根据编号排序（冒泡排序）<br>void sortById(Book*);</p><p>#include&lt;stdio.h&gt;</p><p>//定义书本Book的结构体<br>typedef struct Node {<br>    int id;                //编号<br>    char name[50];        //书名<br>    char author[20];    //作者<br>    int inventory;        //库存量<br>    float price;        //价格<br>    struct Node* next;    //指针域<br>} Book;    //结构体定义为Book</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">"Choose.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token comment" spellcheck="true">//选择功能</span><span class="token keyword">void</span> <span class="token function">choose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    Book<span class="token operator">*</span> head <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> flag<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//控制主菜单功能</span>    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//控制循环,以-1终止</span><span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">printMainMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//打印菜单</span>    <span class="token function">scanf_s</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//选择功能</span>​    <span class="token keyword">switch</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//各操作数字对应菜单数字，通过n确定操作类型</span>​    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>创建​        head <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>​        <span class="token function">sortById</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//排序</span>​        <span class="token keyword">break</span><span class="token punctuation">;</span>​    <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>插入​        <span class="token function">insert</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>​        <span class="token keyword">break</span><span class="token punctuation">;</span>​    <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>删除​        <span class="token function">del</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>​        <span class="token keyword">break</span><span class="token punctuation">;</span>​    <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>修改​        <span class="token function">mod</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>​        <span class="token keyword">break</span><span class="token punctuation">;</span>​    <span class="token keyword">case</span> <span class="token number">5</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>查找​        <span class="token function">printSearchMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//打印查询菜单</span>​        <span class="token keyword">int</span> flagSerch <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//控制查询菜单功能</span>​        <span class="token function">scanf_s</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>flagSerch<span class="token punctuation">)</span><span class="token punctuation">;</span>​        <span class="token keyword">switch</span> <span class="token punctuation">(</span>flagSerch<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>​        <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">//查询所有图书信息</span>​            <span class="token function">printBook</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>​            <span class="token keyword">break</span><span class="token punctuation">;</span>​        <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">//根据编号查询</span>​            <span class="token function">searchById</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>​            <span class="token keyword">break</span><span class="token punctuation">;</span>​        <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">//根据书名查询</span>​            <span class="token function">searchByName</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>​            <span class="token keyword">break</span><span class="token punctuation">;</span>​        <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">//根据作者查询</span>​            <span class="token function">searchByAuthor</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>​            <span class="token keyword">break</span><span class="token punctuation">;</span>​        defalt<span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">//返回主菜单</span>​            <span class="token keyword">break</span><span class="token punctuation">;</span>​        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>​        <span class="token keyword">break</span><span class="token punctuation">;</span>​    <span class="token keyword">case</span> <span class="token number">7</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>关于​        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n联系我们:iszhangzhi@outlook.com\n        完整源码请点击korozas.top\n        不才新建的站，体验不佳多多担待    2021.03.15\n\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>​    <span class="token keyword">default</span><span class="token punctuation">:</span>​        i <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//跳出循环，退出管理系统</span>​        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n成功退出管理系统！\n\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>​        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"按任意字符关闭窗口"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>​        <span class="token function">getch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>​        <span class="token keyword">break</span><span class="token punctuation">;</span>​    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">"Create.h"</span></span>Book<span class="token operator">*</span> <span class="token function">create</span><span class="token punctuation">(</span>Book <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//清空屏幕</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//如果不存在链表，创建链表</span>        Book<span class="token operator">*</span> p<span class="token punctuation">,</span> <span class="token operator">*</span> q<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//定义指针</span>        head <span class="token operator">=</span> <span class="token punctuation">(</span>Book<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>Book<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//从头节点开辟空间</span>        head<span class="token operator">-></span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//置空头节点的指针域</span>        q <span class="token operator">=</span> head<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//q指针记录头节点的地址</span>        p <span class="token operator">=</span> head<span class="token operator">-></span>next<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//p指针记录头节点的指针域的地址</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入书本的信息,按-1结束（格式：编号 书名 作者 库存量 价格）\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//输入的编号</span>        <span class="token function">scanf_s</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>id <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            p <span class="token operator">=</span> <span class="token punctuation">(</span>Book<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>Book<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//p指针开辟空间</span>            <span class="token comment" spellcheck="true">//输入各成员</span>            p<span class="token operator">-></span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>            <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s %s %d %f"</span><span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">,</span> p<span class="token operator">-></span>author<span class="token punctuation">,</span> <span class="token operator">&amp;</span>p<span class="token operator">-></span>inventory<span class="token punctuation">,</span> <span class="token operator">&amp;</span>p<span class="token operator">-></span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>            p<span class="token operator">-></span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//置空p节点的指针域</span>            q<span class="token operator">-></span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//p，q节点连接</span>            q <span class="token operator">=</span> p<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//q指针后移</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入书本的信息，按-1结束（格式：编号 书名 作者 库存量 价格）\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">scanf_s</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//如果存在链表，返回错误信息</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"已存在图书链表，请勿重复创建!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//使页面停留在当前页</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"输入任意键返回......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">getch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> head<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//返回链表的起始位置</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"del.h"</span></span><span class="token comment" spellcheck="true">//删除节点模块</span><span class="token keyword">void</span> <span class="token function">del</span><span class="token punctuation">(</span>Book<span class="token operator">*</span> head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//如果链表不为空，开始删除</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        Book<span class="token operator">*</span> p<span class="token punctuation">,</span> <span class="token operator">*</span> q<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义指针</span>        <span class="token keyword">int</span> id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//用于输入编号查找删除</span>        p <span class="token operator">=</span> head<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//p记录头节点的地址</span>        q <span class="token operator">=</span> head<span class="token operator">-></span>next<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//q记录头节点的指针域的地址</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入要删除的图书编号："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//输入编号</span>        <span class="token function">scanf_s</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>q <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//q不为空时执行循环</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>q<span class="token operator">-></span>id <span class="token operator">==</span> id<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//判断是否找到输入的编号</span>                <span class="token comment" spellcheck="true">//为真时</span>            <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                p<span class="token operator">-></span>next <span class="token operator">=</span> q<span class="token operator">-></span>next<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//断开q节点</span>                <span class="token function">free</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//释放q节点neicun</span>                q <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//置空q指针防止出现野指针</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//判断为假时</span>                p <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//p指针后移</span>                q <span class="token operator">=</span> q<span class="token operator">-></span>next<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//q指针后移</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//当查找到最后一个节点还未查到要删除的编号时，输出错误信息</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"没有此编号\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//使页面停留在当前页</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"输入任意键返回......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">getch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//如果链表为空</span>    <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"还未创建图书链表，请创建链表后再删除\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//使页面停留在当前页</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"输入任意键返回......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">getch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"Insert.h"</span></span><span class="token comment" spellcheck="true">//插入节点模块（可多个插入）</span><span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span>Book <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果链表不为空，开始插入</span><span class="token keyword">if</span> <span class="token punctuation">(</span>head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//flag实现判断指针是否到达最后一个节点</span>​    Book<span class="token operator">*</span> p<span class="token punctuation">,</span> <span class="token operator">*</span> q<span class="token punctuation">,</span> <span class="token operator">*</span> r<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//定义指针便于插入操作</span>​    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入书本的信息,按-1结束（格式：编号 书名 作者 库存量 价格）\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>​    <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//输入的编号</span>​    <span class="token function">scanf_s</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>​    <span class="token keyword">while</span> <span class="token punctuation">(</span>id <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//输入-1结束</span>​        r <span class="token operator">=</span> <span class="token punctuation">(</span>Book<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>Book<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//r指针开辟空间</span>​        r<span class="token operator">-></span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//置空r的指针域</span>​        r<span class="token operator">-></span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>​        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s %s %d %f"</span><span class="token punctuation">,</span> r<span class="token operator">-></span>name<span class="token punctuation">,</span> r<span class="token operator">-></span>author<span class="token punctuation">,</span> <span class="token operator">&amp;</span>r<span class="token operator">-></span>inventory<span class="token punctuation">,</span> <span class="token operator">&amp;</span>r<span class="token operator">-></span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>​        q <span class="token operator">=</span> head<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//q指针记录头节点的地址</span>​        p <span class="token operator">=</span> head<span class="token operator">-></span>next<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//p指针记录头节点的指针域的地址</span>​        <span class="token keyword">while</span> <span class="token punctuation">(</span>q<span class="token operator">-></span>next <span class="token operator">!=</span> <span class="token constant">NULL</span> <span class="token operator">&amp;&amp;</span> p<span class="token operator">-></span>id <span class="token operator">&lt;</span> r<span class="token operator">-></span>id<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//循环条件：当q->next不为空,以及按图书编号排序插入</span>​            p <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//p指针后移</span>​            q <span class="token operator">=</span> q<span class="token operator">-></span>next<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//q指针后移</span>​            <span class="token keyword">if</span> <span class="token punctuation">(</span>q<span class="token operator">-></span>next <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//这个判断防止q->next为空时，在执行循环是出现野指针使程序出错</span>​                p <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//防止出现野指针p</span>​                q<span class="token operator">-></span>next <span class="token operator">=</span> r<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//连接节点</span>​                r<span class="token operator">-></span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//置空r指针域</span>​                flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//到达最后一个节点更改flag</span>​                <span class="token keyword">break</span><span class="token punctuation">;</span>​            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>​        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>​        <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//判断是否到达最后一个节点，为真执行该操作</span>​            r<span class="token operator">-></span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>​            q<span class="token operator">-></span>next <span class="token operator">=</span> r<span class="token punctuation">;</span>​            <span class="token comment" spellcheck="true">//实现将r节点插入链表</span>​        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>​        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入书本的信息,按-1结束（格式：编号 书名 作者 库存量 价格）\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>​        <span class="token function">scanf_s</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>​    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果链表为空</span><span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>​    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"还未创建图书链表，请创建链表后再插入!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>​    <span class="token comment" spellcheck="true">//使页面停留在当前页</span>​    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"输入任意键返回......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>​    <span class="token function">getch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">"Choose.h"</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//选择功能</span>    <span class="token function">choose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"mod.h"</span></span><span class="token comment" spellcheck="true">//修改节点模块</span><span class="token keyword">void</span> <span class="token function">mod</span><span class="token punctuation">(</span>Book<span class="token operator">*</span> head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//如果链表不为空，开始修改</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        Book<span class="token operator">*</span> p<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//定义指针</span>        <span class="token keyword">int</span> id1<span class="token punctuation">,</span> id2<span class="token punctuation">,</span> inventory1<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//定义num1用于输入查找书籍修改信息,num2用于修改</span>        <span class="token keyword">char</span> name1<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span> author1<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> price1<span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入要修改的图书编号："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//输入要修改的图书编号</span>        <span class="token function">scanf_s</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>id1<span class="token punctuation">)</span><span class="token punctuation">;</span>        p <span class="token operator">=</span> head<span class="token operator">-></span>next<span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token operator">-></span>id <span class="token operator">==</span> id1<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//判断是否找到书籍</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入书本的信息（格式：编号 书名 作者 库存量 价格）\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//为真时，重输图书信息</span>                <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d %s %s %d %f"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>id2<span class="token punctuation">,</span> name1<span class="token punctuation">,</span> author1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>inventory1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>price1<span class="token punctuation">)</span><span class="token punctuation">;</span>                p<span class="token operator">-></span>id <span class="token operator">=</span> id2<span class="token punctuation">;</span>                <span class="token function">strcpy</span><span class="token punctuation">(</span>p<span class="token operator">-></span>name<span class="token punctuation">,</span> name1<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">strcpy</span><span class="token punctuation">(</span>p<span class="token operator">-></span>author<span class="token punctuation">,</span> author1<span class="token punctuation">)</span><span class="token punctuation">;</span>                p<span class="token operator">-></span>inventory <span class="token operator">=</span> inventory1<span class="token punctuation">;</span>                p<span class="token operator">-></span>price <span class="token operator">=</span> price1<span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//为假时</span>                p <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//指针后移</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//查找到最后一个节点还未查到要的编号时，输出错误信息</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"未查找到该图书编号\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//使页面停留在当前页</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"输入任意键返回......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">getch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"还未创建图书链表，请创建链表后再修改!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//使页面停留在当前页</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"输入任意键返回......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">getch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">"PrintBook.h"</span></span><span class="token comment" spellcheck="true">//输出链表函数</span><span class="token keyword">void</span> <span class="token function">printBook</span><span class="token punctuation">(</span>Book <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 清屏</span>    <span class="token comment" spellcheck="true">//如果链表不为空，显示信息</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        Book<span class="token operator">*</span> p <span class="token operator">=</span> head<span class="token operator">-></span>next<span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"编号\t书名\t作者\t数量\t价格\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//当p不为空的时候执行</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\t%s\t%s\t%d\t%.2f\n"</span><span class="token punctuation">,</span> p<span class="token operator">-></span>id<span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">,</span> p<span class="token operator">-></span>author<span class="token punctuation">,</span> p<span class="token operator">-></span>inventory<span class="token punctuation">,</span> p<span class="token operator">-></span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            p <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//指针后移</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//如果为空</span>    <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"还未创建图书链表，请添加书本后再查询!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使页面停留在当前页</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"输入任意键返回......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">getch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-c"><code class="language-c">```c<span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">"PrintMainMenu.h"</span></span><span class="token comment" spellcheck="true">//打印菜单</span><span class="token keyword">void</span> <span class="token function">printMainMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 清屏</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"color 3e"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//设置字体和背景颜色</span>    <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t图书信息管理系统\t\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t ******************初次运行请新建书库（1）初始化程序！! ！********************\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t *=======================================*\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t|  * - - * 欢迎使用图书信息管理系统 * - - * \n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| *                                     * |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| |  [1]   新建书库                     | |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| *                                     * |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| |  [2]   图书入库                     | |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| *                                     * |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| |  [3]   删除图书                     | |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| *                                     * |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| |  [4]   图书属性修改                 | |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| *                                     * |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| |  [5]   图书信息查询                 | |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| *                                     * |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| |  [6]   退出系统                     | |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| *                                     * |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| *  [7]   帮助和反馈                   * |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t|  * - * - * - * - * - * - * - * - * - *  |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t *=======================================*\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t请选择功能模块(1～7,按其他字符退出):"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> # <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>```<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"printSearchMenu.h"</span></span><span class="token comment" spellcheck="true">//打印搜索菜单</span><span class="token keyword">void</span> <span class="token function">printSearchMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 清屏</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"color 3e"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//设置字体和背景颜色</span><span class="token function">putchar</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t *=======================================*\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t|  * - - * 欢迎使用图书信息管理系统 * - - *  \n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| *                                     * |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| |  [1]   查询所有图书信息             | |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| *                                     * |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| |  [2]   根据编号查询                 | |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| *                                     * |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| |  [3]   书名查询                     | |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| *                                     * |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| |  [4]   作者名查询                   | |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| *                                     * |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| |  [5]   返回                         | |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t| *                                     * |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t|  * - * - * - * - * - * - * - * - * - *  |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t *=======================================*\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t请选择功能(1～5,按其他字符退出):"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"searchByAuthor.h"</span></span><span class="token comment" spellcheck="true">//根据作者查询</span><span class="token keyword">void</span> <span class="token function">searchByAuthor</span><span class="token punctuation">(</span>Book<span class="token operator">*</span> head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 清屏</span><span class="token comment" spellcheck="true">//如果链表不为空，开始查询</span><span class="token keyword">if</span> <span class="token punctuation">(</span>head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    Book<span class="token operator">*</span> p<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义指针</span>    <span class="token keyword">char</span> author<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义author用于输入查找书籍</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入您要查找图书的作者:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//输入查找作者</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> author<span class="token punctuation">)</span><span class="token punctuation">;</span>    p <span class="token operator">=</span> head<span class="token operator">-></span>next<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>p<span class="token operator">-></span>author<span class="token punctuation">,</span> author<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//判断是否找到书籍</span>            <span class="token comment" spellcheck="true">//为真时，输出信息</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"书籍信息\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"编号\t书名\t作者\t数量\t价格\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\t%s\t%s\t%d\t%.2f\n"</span><span class="token punctuation">,</span> p<span class="token operator">-></span>id<span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">,</span> p<span class="token operator">-></span>author<span class="token punctuation">,</span> p<span class="token operator">-></span>inventory<span class="token punctuation">,</span> p<span class="token operator">-></span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>            <span class="token comment" spellcheck="true">//为假时</span>            p <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//指针后移</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//查找到最后一个节点还未查到要的编号时，输出错误信息</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"未查询到该图书！\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果为空</span><span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"还未创建图书链表，请添加书本后再查询!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使页面停留在当前页</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"输入任意键返回......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">getch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"searchById.h"</span></span><span class="token comment" spellcheck="true">//根据编号查找图书信息</span><span class="token keyword">void</span> <span class="token function">searchById</span><span class="token punctuation">(</span>Book<span class="token operator">*</span> head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 清屏</span>    <span class="token comment" spellcheck="true">//如果链表不为空，开始查询</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        Book<span class="token operator">*</span> p<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义指针</span>        <span class="token keyword">int</span> id1<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义id1用于输入查找书籍</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入您要查找的图书编号:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//输入查找编号</span>        <span class="token function">scanf_s</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>id1<span class="token punctuation">)</span><span class="token punctuation">;</span>        p <span class="token operator">=</span> head<span class="token operator">-></span>next<span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token operator">-></span>id <span class="token operator">==</span> id1<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//判断是否找到书籍</span>                <span class="token comment" spellcheck="true">//为真时，输出信息</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"编号\t书名\t作者\t数量\t价格\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\t%s\t%s\t%d\t%.2f\n"</span><span class="token punctuation">,</span> p<span class="token operator">-></span>id<span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">,</span> p<span class="token operator">-></span>author<span class="token punctuation">,</span> p<span class="token operator">-></span>inventory<span class="token punctuation">,</span> p<span class="token operator">-></span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token keyword">else</span>                <span class="token comment" spellcheck="true">//为假时</span>                p <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//指针后移</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//查找到最后一个节点还未查到要的编号时，输出错误信息</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"未查询到该图书！\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//如果为空</span>    <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"还未创建图书链表，请添加书本后再查询!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使页面停留在当前页</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"输入任意键返回......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">getch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"searchByName.h"</span></span><span class="token comment" spellcheck="true">//根据书名查找图书信息</span><span class="token keyword">void</span> <span class="token function">searchByName</span><span class="token punctuation">(</span>Book<span class="token operator">*</span> head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 清屏</span>    <span class="token comment" spellcheck="true">//如果链表不为空，开始查询</span><span class="token keyword">if</span> <span class="token punctuation">(</span>head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    Book<span class="token operator">*</span> p<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义指针</span>    <span class="token keyword">char</span> name1<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义name1用于输入查找书名</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入您要查找的书名:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//输入查找书名</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> name1<span class="token punctuation">)</span><span class="token punctuation">;</span>    p <span class="token operator">=</span> head<span class="token operator">-></span>next<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>p<span class="token operator">-></span>name<span class="token punctuation">,</span> name1<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//判断是否找到书籍</span>            <span class="token comment" spellcheck="true">//为真时，输出信息</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"编号\t书名\t作者\t数量\t价格\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\t%s\t%s\t%d\t%.2f\n"</span><span class="token punctuation">,</span> p<span class="token operator">-></span>id<span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">,</span> p<span class="token operator">-></span>author<span class="token punctuation">,</span> p<span class="token operator">-></span>inventory<span class="token punctuation">,</span> p<span class="token operator">-></span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//为假时</span>            p <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//指针后移</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//查找到最后一个节点还未查到要的编号时，输出错误信息</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"未查询到该图书！\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果为空</span><span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"还未创建图书链表，请添加书本后再查询!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使页面停留在当前页</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"输入任意键返回......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">getch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"sortById.h"</span></span><span class="token comment" spellcheck="true">//链表根据编号排序（冒泡排序）</span><span class="token keyword">void</span> <span class="token function">sortById</span><span class="token punctuation">(</span>Book<span class="token operator">*</span> head<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//排序中没有修改头节点指针值，只是修改指针内容head->next的值</span>    Book<span class="token operator">*</span> pre<span class="token punctuation">,</span> <span class="token operator">*</span> p<span class="token punctuation">,</span> <span class="token operator">*</span> tail<span class="token punctuation">,</span> <span class="token operator">*</span> temp<span class="token punctuation">;</span>    tail <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>    pre <span class="token operator">=</span> head<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>head<span class="token operator">-></span>next<span class="token operator">-></span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> tail<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//(head->next)!=tail同样适用 ，多执行最后一个步比较</span>        p <span class="token operator">=</span> head<span class="token operator">-></span>next<span class="token punctuation">;</span>        pre <span class="token operator">=</span> head<span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>p<span class="token operator">-></span>next <span class="token operator">!=</span> tail<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token operator">-></span>id<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token punctuation">(</span>p<span class="token operator">-></span>next<span class="token operator">-></span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                pre<span class="token operator">-></span>next <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//交换节点方法</span>                temp <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token operator">-></span>next<span class="token punctuation">;</span>                p<span class="token operator">-></span>next<span class="token operator">-></span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>                p<span class="token operator">-></span>next <span class="token operator">=</span> temp<span class="token punctuation">;</span>                p <span class="token operator">=</span> pre<span class="token operator">-></span>next<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//p回退一个节点</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            p <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//p再前进一个节点</span>            pre <span class="token operator">=</span> pre<span class="token operator">-></span>next<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        tail <span class="token operator">=</span> p<span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#pragma once&lt;br&gt;#include &amp;lt;stdio.h&amp;gt;&lt;br&gt;#include “Book.c”&lt;br&gt;#include “PrintMainMenu.h”&lt;/p&gt;
&lt;p&gt;//选择功能&lt;br&gt;void choose();&lt;/p&gt;
&lt;p&gt;#pragm</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://korozas.top/2021/01/29/hello-world/"/>
    <id>http://korozas.top/2021/01/29/hello-world/</id>
    <published>2021-01-29T03:34:35.929Z</published>
    <updated>2021-01-29T03:34:35.929Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
